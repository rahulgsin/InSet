import numpy as np
import matplotlib.pyplot as plt
import matplotlib

fig = plt.figure()                                                               
ax = fig.add_subplot(2,1,1)      
lines = [line.rstrip('\n') for line in open('magnitude1.data')] #Getting data generated by NGspice in appropriate format for plotting 
line1 = [line.split() for line in open('magnitude1.data',"r")]
xpt = 0*np.ones(len(lines))
ypt = 0*np.ones(len(lines))
for i in range(len(xpt)):
    xpt[i] = float(line1[i][0])
    ypt[i] = float(line1[i][1])


lines = [line.rstrip('\n') for line in open('magnitude2.data')] #Getting data generated by NGspice in appropriate format for plotting 
line1 = [line.split() for line in open('magnitude2.data',"r")]
xpt2 = np.zeros(len(lines))
ypt2 = np.zeros(len(lines))
for i in range(len(xpt)):
    xpt2[i] = float(line1[i][0])
    ypt2[i] = float(line1[i][1])

lines = [line.rstrip('\n') for line in open('magnitude3.data')] #Getting data generated by NGspice in appropriate format for plotting 
line1 = [line.split() for line in open('magnitude3.data',"r")]
xpt32 = np.zeros(len(lines))
ypt32 = np.zeros(len(lines))
for i in range(len(xpt)):
    xpt32[i] = float(line1[i][0])
    ypt32[i] = float(line1[i][1])
    
plt.xscale('log')
plt.yscale('log')
#plt.xlabel('frequency f/Hz',fontsize=25)
plt.ylabel('Magnitude',fontsize=25)
plt.plot(xpt,ypt,'r--',xpt2,ypt2,'g',xpt32,ypt32,'+',linewidth=3)
plt.xticks(fontsize = 25)
plt.yticks(fontsize = 25)
#plt.grid(True)
plt.legend(['R=1MOhm','R=1 Kohm','R=50 Ohm'],loc='best',fontsize = 30)
major_ticks = np.arange(0,1,0.001)
ax.set_yticks(major_ticks)

ax1 = fig.add_subplot(2,1,2)
plt.subplot(212)

lines = [line.rstrip('\n') for line in open('phase1.data')] #Getting data generated by NGspice in appropriate format for plotting 
line1 = [line.split() for line in open('phase1.data',"r")]
xpt3 = 0*np.ones(len(lines))
ypt3 = 0*np.ones(len(lines))
for i in range(len(xpt)):
    xpt3[i] = float(line1[i][0])
    ypt3[i] = (180/np.pi)*float(line1[i][1])


lines = [line.rstrip('\n') for line in open('phase2.data')] #Getting data generated by NGspice in appropriate format for plotting 
line1 = [line.split() for line in open('phase2.data',"r")]
xpt4 = 0*np.ones(len(lines))
ypt4 = 0*np.ones(len(lines))
for i in range(len(xpt)):
    xpt4[i] = float(line1[i][0])
    ypt4[i] = (180/np.pi)*float(line1[i][1])

lines = [line.rstrip('\n') for line in open('phase3.data')] #Getting data generated by NGspice in appropriate format for plotting 
line1 = [line.split() for line in open('phase3.data',"r")]
xpt5 = 0*np.ones(len(lines))
ypt5 = 0*np.ones(len(lines))
for i in range(len(xpt)):
    xpt5[i] = float(line1[i][0])
    ypt5[i] = (180/np.pi)*float(line1[i][1])
    
plt.xscale('log')
plt.xlabel('frequency f/Hz',fontsize=25)
plt.ylabel('Phase',fontsize=25)
major_ticks = np.arange(0, 100, 20)
ax1.set_yticks(major_ticks) 
plt.plot(xpt3,ypt3,'r--',xpt4,ypt4,'g',xpt5,ypt5,'+',linewidth=3)
plt.legend(['R=1MOhm','R=1 Kohm','R=50 Ohm'],loc='best',fontsize = 25)
#plt.figure(1)
#plt.plot(xpt,ypt2-ypt,xpt,ypt2+ypt)
#plt.figure(2)
#plt.plot(xpt3,ypt3-ypt4,xpt3,ypt3+ypt4)
plt.xticks(fontsize = 23) 
plt.yticks(fontsize = 23) 
#plt.grid(True)
plt.show()

